<%#-- copyright
OpenProject is a project management system.
Copyright (C) 2012-2015 the OpenProject Foundation (OPF)

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See doc/COPYRIGHT.rdoc for more details.

++#%>

<%= call_hook(:view_repositories_show_contextual, { :repository => @repository, :project => @project }) %>


<%= render :partial => 'navigation', locals: { merge: { kind: 'dir' } } %>

<% if !@entries.nil? && authorize_for('repositories', 'browse') %>
<%= render :partial => 'dir_list' %>
<% end %>

<%= render_properties(@properties) %>

<%# rev => nil prevents overwriting the rev parameter queried for in the form with the parameter from the request %>
<%= form_tag({ action: controller.action_name,
               project_id: @project,
               path: to_path_param(@path),
               rev: nil
             },
             method: :get,
             id: 'revision_selector',
             class: 'form -vertical'
            ) do %>
<fieldset class="form--fieldset">
  <legend class="form--fieldset-legend"><%= l(:label_revision_plural) %></legend>
  <div class="grid-block wrap">
    <div class="form--column medium-3">
      <div class="form--field -wide-label -break-words ">
        <label class="form--label"><%= l('repositories.go_to_revision') %></label>
        <div class="form--field-container">
          <div class="form--text-field-container">
            <%= text_field_tag :rev, @rev, id: 'revision-identifier-input', placeholder: l(:label_revision) %>
          </div>
        </div>
      </div>
    </div>
    <% if !@repository.branches.nil? && @repository.branches.length > 0 %>
    <div class="form--column medium-3">
      <div class="form--field -wide-label -break-words ">
        <label class="form--label"><%= l(:label_branch) %></label>
        <div class="form--field-container">
          <div class="form--select-container">
            <%= select_tag :branch, options_for_select([''] + @repository.branches, @rev), id: 'revision-branch-select' %>
          </div>
        </div>
      </div>
    </div>
    <% end %>
    <% if !@repository.tags.nil? && @repository.tags.length > 0 %>
    <div class="form--column medium-3">
      <div class="form--field -wide-label -break-words ">
        <label class="form--label"><%= l(:label_tag) %></label>
        <div class="form--field-container">
          <div class="form--select-container">
            <%= select_tag :tag, options_for_select([''] + @repository.tags, @rev), id: 'revision-tag-select' %>
          </div>
        </div>
      </div>
    </div>
    <% end %>
  </div>
  <% if User.current.impaired? %>
    <div>
      <%= button_tag 'OK', type: :submit, class: 'button -highlight' %>
    </div>
  <% end %>
</fieldset>
<% end %>
<% if authorize_for('repositories', 'revisions') %>
<%   if @changesets && !@changesets.empty? %>
<%=    render :partial => 'revisions',
              :locals => {:project => @project, :path => @path,
                          :revisions => @changesets, :entry => nil }%>
<%   end %>
<p>
<%
     has_branches = (!@repository.branches.nil? && @repository.branches.length > 0)
     sep = ''
 %>

<%   if @repository.supports_all_revisions? && @path.blank? %>
<%= link_to l(:label_view_all_revisions), revisions_project_repository_path(@project) %>
<%   sep = '|' %>
<%   end %>
<%
     if @repository.supports_directory_revisions? &&
         ( has_branches || !@path.blank? || !@rev.blank? )
 %>
<%= sep %>
<%=
    link_to l(:label_view_revisions),
            :action => 'changes',
            :project_id => @project,
            :path   => to_path_param(@path),
            :rev    => @rev
            %>
<%   end %>
</p>

<%   if true # @path.blank? %>
<%     content_for :header_tags do %>
  <%= auto_discovery_link_tag(:atom,
                              params.merge( { :format => 'atom',
                                              :action => 'revisions',
                                              :project_id => @project,
                                              :page => nil,
                                              :key => User.current.rss_key })) %>
<%     end %>

<%= other_formats_links do |f| %>
  <%= f.link_to 'Atom', :url => {:action => 'revisions', :project_id => @project, :key => User.current.rss_key} %>
<%     end %>
<%   end %>
<% end %>

<% html_title(l(:label_repository)) -%>
